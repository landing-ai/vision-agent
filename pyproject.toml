[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vision-agent"
version = "1.1.12"
description = "Toolset for Vision Agent"
authors = [{ name = "Landing AI", email = "dev@landing.ai" }]
requires-python = ">=3.9,<4.0"
readme = "README.md"
dependencies = [
    "numpy>=1.21.0,<2.0.0",
    "pillow==10.*",
    "requests==2.*",
    "tqdm>=4.64.0,<5.0.0",
    "pandas==2.*",
    "openai==1.55.3",
    "httpx==0.27.2",
    "flake8>=7.0.0,<8",
    "typing_extensions==4.*",
    "opencv-python==4.*",
    "tabulate>=0.9.0,<0.10",
    "scipy==1.13.*",
    "nbclient>=0.10.0,<0.11",
    "nbformat>=5.10.4,<6",
    "rich>=13.7.1,<14",
    "ipykernel>=6.29.4,<7",
    "tenacity>=8.3.0,<9",
    "pillow-heif>=0.16.0,<0.17",
    "anthropic>=0.31.0,<0.32",
    "pydantic>=2.0.0,<3",
    "av>=11.0.0,<12",
    "libcst>=1.5.0,<2",
    "matplotlib>=3.9.2,<4",
    "scikit-learn>=1.5.2,<2",
    "opentelemetry-api>=1.29.0,<2",
    "dotenv>=0.9.9,<0.10",
    "pymupdf>=1.23.0,<2",
    "google-genai>=1.0.0,<2",
    "yt-dlp>=2025.3.31",
]

[project.urls]
Homepage = "https://landing.ai"
repository = "https://github.com/landing-ai/vision-agent"
documentation = "https://github.com/landing-ai/vision-agent"

[dependency-groups]
dev = [
    "autoflake==1.*",
    "pytest==7.*",
    "black>=23,<25",
    "isort==5.*",
    "responses>=0.23.1,<0.24",
    "mypy<1.8.0",
    "types-requests>=2.31.0.0,<3",
    "types-pillow>=9.5.0.4,<10",
    "data-science-types>=0.2.23,<0.3",
    "types-tqdm>=4.65.0.1,<5",
    "setuptools>=68.0.0,<69",
    "griffe>=0.45.3,<0.46",
    "mkdocs>=1.5.3,<2",
    "mkdocstrings[python]>=0.23.0,<0.24",
    "mkdocs-material>=9.4.2,<10",
    "types-tabulate>=0.9.0.20240106,<0.10",
    "scikit-image<0.23.1",
    "pre-commit>=3.8.0,<4",
]

[tool.hatch.build.targets.wheel]
include = [
    "vision_agent",
    "vision_agent/.sim_tools/*",
]


[tool.hatch.build.targets.sdist]
include = [
    "vision_agent",
    "vision_agent/.sim_tools/*",
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.black]
exclude = '.vscode|.eggs|venv'
line-length = 88  # suggested by black official site

[tool.isort]
line_length = 88
profile = "black"

[tool.mypy]
plugins = "pydantic.mypy"

exclude = "tests"
show_error_context = true
pretty = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
extra_checks = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_return_any = true
show_error_codes = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "cv2.*",
    "openai.*",
    "sentence_transformers.*",
]
